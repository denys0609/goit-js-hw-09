{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAQA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKI,SAASC,MAC3BC,EAAiBN,EAAKI,SAASG,KAC/BC,EAAcR,EAAKI,SAASK,OAgBlC,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GACxB,IAAIC,SAAQ,CAACC,EAASC,KAClCC,YAAW,KACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUN,MAAAO,IAEpBM,EAAO,CAAEE,SAAAT,EAAUN,MAAAO,GAAQ,GAE5BA,EAAM,IAGRS,MAAK,EAACD,SAAEA,EAAQf,MAAEA,MACjBiB,EAAAxB,GAASyB,OAAOC,QAAQ,uBAAqBJ,QAAiBf,MAAU,IAEzEoB,OAAM,EAACL,SAAEA,EAAQf,MAAEA,MAClBiB,EAAAxB,GAASyB,OAAOG,QAAQ,sBAAoBN,QAAef,MAAU,G,CA9B3EL,EAAK2B,iBAAiB,UAEtB,SAAgBC,GACdA,EAAIC,iBACJ,IAAIxB,EAAQyB,OAAO3B,EAAW4B,OAC9B,MAAMxB,EAAOuB,OAAOxB,EAAeyB,OAC7BtB,EAASqB,OAAOtB,EAAYuB,OAElC,IAAK,IAAIC,EAAI,EAAGA,GAAKvB,EAAQuB,GAAK,EAChCtB,EAAcsB,EAAG3B,GACjBA,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const elements = {\n//   form: document.querySelector('.form'),\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n// };\nconst form = document.querySelector('.form');\nconst inputDelay = form.elements.delay;\nconst inputDelayStep = form.elements.step;\nconst inputAmount = form.elements.amount;\n// const btnCreatePromise = document.querySelector('button');\nform.addEventListener('submit', submit);\n\nfunction submit(evt) {\n  evt.preventDefault();\n  let delay = Number(inputDelay.value);\n  const step = Number(inputDelayStep.value);\n  const amount = Number(inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$form","document","querySelector","$47d4ff9957288465$var$inputDelay","elements","delay","$47d4ff9957288465$var$inputDelayStep","step","$47d4ff9957288465$var$inputAmount","amount","$47d4ff9957288465$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","$parcel$interopDefault","Notify","success","catch","failure","addEventListener","evt","preventDefault","Number","value","i"],"version":3,"file":"03-promises.f7a44f39.js.map"}