{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAQMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaH,EAAKI,SAASC,MAC3BC,EAAiBN,EAAKI,SAASG,KAC/BC,EAAcR,EAAKI,SAASK,OAgBlC,SAASC,EAAcC,EAAUC,GAC/B,IAAMC,EAAgBC,KAAKC,SAAW,GACxB,IAAIC,SAAQ,SAACC,EAASC,GAClCC,YAAW,WACLN,EACFI,EAAQ,CAAEG,SAAAT,EAAUN,MAAAO,IAEpBM,EAAO,CAAEE,SAAAT,EAAUN,MAAAO,G,GAEpBA,E,IAGFS,MAAK,SAAAC,G,IAAGF,EAAQE,EAARF,SAAUf,EAAKiB,EAALjB,MACjBkB,EAAAzB,GAAS0B,OAAOC,QAAQ,uBAAwCC,OAAfN,EAAS,QAAYM,OAANrB,EAAM,M,IAEvEsB,OAAM,SAAAL,G,IAAGF,EAAQE,EAARF,SAAUf,EAAKiB,EAALjB,MAClBkB,EAAAzB,GAAS0B,OAAOI,QAAQ,sBAAqCF,OAAfN,EAAS,QAAYM,OAANrB,EAAM,M,IA9BzEL,EAAK6B,iBAAiB,UAEtB,SAAgBC,GACdA,EAAIC,iBAKJ,IAJA,IAAI1B,EAAQ2B,OAAO7B,EAAW8B,OACxB1B,EAAOyB,OAAO1B,EAAe2B,OAC7BxB,EAASuB,OAAOxB,EAAYyB,OAEzBC,EAAI,EAAGA,GAAKzB,EAAQyB,GAAK,EAChCxB,EAAcwB,EAAG7B,GACjBA,GAASE,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n// const elements = {\n//   form: document.querySelector('.form'),\n//   delay: document.querySelector('input[name=\"delay\"]'),\n//   step: document.querySelector('input[name=\"step\"]'),\n//   amount: document.querySelector('input[name=\"amount\"]'),\n// };\nconst form = document.querySelector('.form');\nconst inputDelay = form.elements.delay;\nconst inputDelayStep = form.elements.step;\nconst inputAmount = form.elements.amount;\n// const btnCreatePromise = document.querySelector('button');\nform.addEventListener('submit', submit);\n\nfunction submit(evt) {\n  evt.preventDefault();\n  let delay = Number(inputDelay.value);\n  const step = Number(inputDelayStep.value);\n  const amount = Number(inputAmount.value);\n\n  for (let i = 1; i <= amount; i += 1) {\n    createPromise(i, delay);\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  let promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n  promise\n    .then(({ position, delay }) => {\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$inputDelay","elements","delay","$ce04d3a99e08e73b$var$inputDelayStep","step","$ce04d3a99e08e73b$var$inputAmount","amount","$ce04d3a99e08e73b$var$createPromise","position1","delay1","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","position","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure","addEventListener","evt","preventDefault","Number","value","i"],"version":3,"file":"03-promises.cae70d21.js.map"}